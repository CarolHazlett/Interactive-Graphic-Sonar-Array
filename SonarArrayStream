
#include <Servo.h>
#include <NewPing.h>

#define SONAR_NUM     5
#define MAX_DISTANCE  300
#define PING_INTERVAL 33

unsigned long pingTimer[SONAR_NUM];
unsigned int cm[SONAR_NUM];
uint8_t currentSensor = 0;

NewPing sonar[SONAR_NUM] = {
  NewPing(39, 40, MAX_DISTANCE),
  NewPing(37, 38, MAX_DISTANCE),
  NewPing(35, 36, MAX_DISTANCE),
  NewPing(52, 53, MAX_DISTANCE),
  NewPing(50, 51, MAX_DISTANCE)
};

void setup() {
  Serial.begin(115200);
  pingTimer[0] = millis() + 75;
  for (uint8_t i = 1; i < SONAR_NUM; i++)
    pingTimer[i] = pingTimer[i - 1] + PING_INTERVAL;
}

void loop() {
  for (uint8_t i = 0; i < SONAR_NUM; i++) {
    if (millis() >= pingTimer[i]) {
      pingTimer[i] += PING_INTERVAL * SONAR_NUM;
      if (i == 0 && currentSensor == SONAR_NUM - 1)
        oneSensorCycle();
      sonar[currentSensor].timer_stop();
      currentSensor = i;
      cm[currentSensor] = 0;
      sonar[currentSensor].ping_timer(echoCheck);
    }
  }
  // The rest of your code would go here.
}

void echoCheck() {
  if (sonar[currentSensor].check_timer())
    cm[currentSensor] = sonar[currentSensor].ping_result / US_ROUNDTRIP_CM;
}

void oneSensorCycle() {       
    Serial.print(cm[0], DEC); 
    Serial.print(',');         
    Serial.print(cm[1], DEC); 
    Serial.print(',');
    Serial.print(cm[2], DEC);
    Serial.print(',');
    Serial.print(cm[3], DEC);
    Serial.print(',');
    Serial.print(cm[4], DEC);
    Serial.print(',');
    Serial.print('*');         
}

 
